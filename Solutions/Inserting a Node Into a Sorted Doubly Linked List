
/*
 * Complete the 'sortedInsert' function below.
 *
 * The function is expected to return an INTEGER_DOUBLY_LINKED_LIST.
 * The function accepts following parameters:
 *  1. INTEGER_DOUBLY_LINKED_LIST llist
 *  2. INTEGER data
 */

/*
 * For your reference:
 *
 * DoublyLinkedListNode {
 *     int data;
 *     DoublyLinkedListNode* next;
 *     DoublyLinkedListNode* prev;
 * };
 *
 */
DoublyLinkedListNode* sortedInsert(DoublyLinkedListNode* head, int data) {
DoublyLinkedListNode *p = (DoublyLinkedListNode*)malloc(sizeof(DoublyLinkedListNode));
DoublyLinkedListNode *q = head;
p->data= data;
if(q->data>data)
{
    q->prev = p;
    p->next = q;
    p->prev = NULL;
    head = p;
    return head;
}
while(q!=NULL)
{
    if (q->data >= data)
    {
        p->next = q;
        p->prev = q->prev;
        q->prev->next = p;
        return head;
    }
    else if (q->next==NULL)
    {
        q->next = p;
        p->prev = q;
        p->next = NULL;
        return head;
    }
    q = q->next;
}
return head;
}
